openapi: "3.0.2"
info:
  title: Room
  version: "1.0"
servers:
  - url: https://<server name>/room
paths:
  /open:
    description: "ルームを作成する\nこのリクエストを送るユーザーがルームのオーナーとなる"
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lifetime_secs:
                  type: number
                  description: "ルームの有効期限（秒） MAXかつデフォルト値は21600(6時間)"
                bundle:
                  $ref: "bundle.yaml"

      responses:
        "200":
          description: "Roomが正常に作成された"
          content:
            application/json:
              schema:
                type: object
                properties:
                  room_id:
                    type: string
                    description: "作成したルームのID このIDを招待するユーザーに共有する"
                  user_id:
                    type: string
                    description: "ルーム内で使用されるユーザーID オーナーは`owner`固定"
                  session_id:
                    type: string
                    description: "以降のHTTPリクエストではクッキーにこのセッションIDを埋め込む（Keyはsession_id）"
                required:
                  - "room_id"
                  - "user_id"
                  - "session_id"

  /{room_id}/join:
    description: "join the join"
    post:
      parameters:
        - $ref: "#/components/parameters/room_id"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: "ルーム内で使用されるユーザーID 省略された場合サーバー側で割り当てられるユーザー名になる"
                  default: null

      responses:
        "200":
          description: "Roomに正常に参加した"
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                    description: "リクエスト時に指定したユーザーID 省略された場合はサーバー側で割り当てられたID"
                  session_id:
                    type: string
                    description: "以降のHTTPリクエストではクッキーにこのセッションIDを埋め込む（Keyはsession_id）"
                  bundle:
                    $ref: "bundle.yaml"
                required:
                  - "user_id"
                  - "session_id"
                  - "bundle"

  /{room_id}:
    description: "ルームを削除する"
    delete:
      responses:
        "200":
          description: "Roomに正常に削除された"

  /{room_id}/tvc/fetch:
    get:
      parameters:
        - $ref: "#/components/parameters/room_id"
        - in: query
          name: branch
          schema:
            type: string
            default: null
            example: main
          description: 取得対象のブランチ名 nullの場合すべてのブランチが対象になる

      responses:
        "200":
          description: 取得対象のブランチに関連するtvcデータ
          content:
            application/json:
              schema:
                type: object
                properties:
                  bundle:
                    $ref: "bundle.yaml"
      security:
        - cookieAuth: [ ]

components:
  parameters:
    room_id:
      in: path
      name: room_id
      schema:
        type: string
        description: "参加するルームのID"
      required: true

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session_id
